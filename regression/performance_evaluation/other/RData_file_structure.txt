# Example contetn of elasticnet_model

# REAL structure:
> str(elasticnet_model)
List of 6
 $ model      :List of 14
  ..$ lambda    : num [1:87] 8.72 7.94 7.24 6.59 6.01 ...
  ..$ cvm       : num [1:87] 0.999 0.999 0.998 0.995 0.991 ...
  ..$ cvsd      : num [1:87] 0.26 0.261 0.261 0.262 0.263 ...
  ..$ cvup      : num [1:87] 1.26 1.26 1.26 1.26 1.25 ...
  ..$ cvlo      : num [1:87] 0.74 0.739 0.736 0.733 0.728 ...
  ..$ nzero     : Named int [1:87] 0 1 1 3 5 5 6 6 7 8 ...
  .. ..- attr(*, "names")= chr [1:87] "s0" "s1" "s2" "s3" ...
  ..$ call      : language cv.glmnet(x = x_train, y = y_train, nfolds = as.numeric(argsL$innerCV),      keep = TRUE, alpha = x)
  ..$ name      : Named chr "Mean-Squared Error"
  .. ..- attr(*, "names")= chr "mse"
  ..$ glmnet.fit:List of 12
  .. ..$ a0       : Named num [1:87] 4.34e-17 4.30e-17 4.25e-17 4.21e-17 4.10e-17 ...
  .. .. ..- attr(*, "names")= chr [1:87] "s0" "s1" "s2" "s3" ...
  .. ..$ beta     :Formal class 'dgCMatrix' [package "Matrix"] with 6 slots
  .. .. .. ..@ i       : int [1:650] 5 5 1 3 5 1 2 3 5 7 ...
  .. .. .. ..@ p       : int [1:88] 0 0 1 2 5 10 15 21 27 34 ...
  .. .. .. ..@ Dim     : int [1:2] 8 87
  .. .. .. ..@ Dimnames:List of 2
  .. .. .. .. ..$ : chr [1:8] "chr6.41070974.41070993" "chr6.41071204.41071343" "chr6.41073354.41073453" "chr6.41073454.41073603" ...
  .. .. .. .. ..$ : chr [1:87] "s0" "s1" "s2" "s3" ...
  .. .. .. ..@ x       : num [1:650] 4.54e-03 9.43e-03 2.25e-03 9.02e-06 1.46e-02 ...
  .. .. .. ..@ factors : list()
  .. ..$ df       : int [1:87] 0 1 1 3 5 5 6 6 7 8 ...
  .. ..$ dim      : int [1:2] 8 87
  .. ..$ lambda   : num [1:87] 8.72 7.94 7.24 6.59 6.01 ...
  .. ..$ dev.ratio: num [1:87] 0 0.00404 0.00833 0.01444 0.02879 ...
  .. ..$ nulldev  : num 20
  .. ..$ npasses  : int 523
  .. ..$ jerr     : int 0
  .. ..$ offset   : logi FALSE
  .. ..$ call     : language glmnet(x = x_train, y = y_train, alpha = x)
  .. ..$ nobs     : int 21
  .. ..- attr(*, "class")= chr [1:2] "elnet" "glmnet"
  ..$ fit.preval: num [1:21, 1:87] 0.00905 -0.08347 0.03597 0.06356 0.02516 ...
  .. ..- attr(*, "dimnames")=List of 2
  .. .. ..$ : chr [1:21] "healthy-6818" "pah-6858" "ph-lung-6912" "healthy-6658" ...
  .. .. ..$ : chr [1:87] "s0" "s1" "s2" "s3" ...
  ..$ foldid    : int [1:21] 3 2 6 5 6 1 2 4 4 6 ...
  ..$ lambda.min: num 1.63
  ..$ lambda.1se: num 8.72
  ..$ index     : int [1:2, 1] 19 1
  .. ..- attr(*, "dimnames")=List of 2
  .. .. ..$ : chr [1:2] "min" "1se"
  .. .. ..$ : chr "Lambda"
  ..- attr(*, "class")= chr "cv.glmnet"
 $ alpha      : num 0.05
 $ lambda     : num 1.63
 $ inner_folds:'data.frame':    21 obs. of  2 variables:
  ..$ sample_id: chr [1:21] "healthy-6818" "pah-6858" "ph-lung-6912" "healthy-6658" ...
  ..$ fold_id  : int [1:21] 3 2 6 5 6 1 2 4 4 6 ...
 $ sample_ids : chr [1:5] "pah-6872" "ph-lung-6885" "pah-6623" "ph-lung-6678" ...
 $ outer_folds: int [1:5] 3 3 3 3 3

# explanations from docu:
Value
an object of class "cv.glmnet" is returned, which is a list with the ingredients of the cross-
validation fit. If the object was created with relax=TRUE then this class has a prefix class of
"cv.relaxed".
24 cv.glmnet
lambda the values of lambda used in the fits.
cvm The mean cross-validated error - a vector of length length(lambda).
cvsd estimate of standard error of cvm.
cvup upper curve = cvm+cvsd.
cvlo lower curve = cvm-cvsd.
nzero number of non-zero coefficients at each lambda.
name a text string indicating type of measure (for plotting purposes).
glmnet.fit a fitted glmnet object for the full data.
lambda.min value of lambda that gives minimum cvm.
lambda.1se largest value of lambda such that error is within 1 standard error of the mini-
mum.
fit.preval if keep=TRUE, this is the array of prevalidated fits. Some entries can be NA, if
that and subsequent values of lambda are not reached for that fold
foldid if keep=TRUE, the fold assignments used
index a one column matrix with the indices of lambda.min and lambda.1se in the
sequence of coefficients, fits etc.
relaxed if relax=TRUE, this additional item has the CV info for each of the mixed fits.
In particular it also selects lambda,gamma pairs corresponding to the 1se rule, as
well as the minimum error. It also has a component index, a two-column matrix
which contains the lambda and gamma indices corresponding to the "min" and
"1se" solution
